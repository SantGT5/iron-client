{"ast":null,"code":"import axios from\"axios\";var apis={development:\"http://localhost:3000/api\",production:\"https://ironbank-server.herokuapp.com/api\"};// Pré-configurando a URL padrão do nosso backend em uma instância do Axios\nvar api=axios.create({baseURL:apis[process.env.NODE_ENV]});// Configura a instância do Axios para injetar o cabeçalho de autenticação antes de cada requisição\napi.interceptors.request.use(function(config){// Verifica se já temos as informações do usuário logado no localStorage\nvar storedUser=localStorage.getItem(\"loggedInUser\");var loggedInUser=JSON.parse(storedUser||'\"\"');if(loggedInUser.token){config.headers={Authorization:\"Bearer \".concat(loggedInUser.token)};}return config;});export default api;","map":{"version":3,"sources":["/home/leticia/Documentos/iron-client/src/apis/api.js"],"names":["axios","apis","development","production","api","create","baseURL","process","env","NODE_ENV","interceptors","request","use","config","storedUser","localStorage","getItem","loggedInUser","JSON","parse","token","headers","Authorization"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,IAAI,CAAG,CACXC,WAAW,CAAE,2BADF,CAEXC,UAAU,CAAE,2CAFD,CAAb,CAKA;AACA,GAAMC,CAAAA,GAAG,CAAGJ,KAAK,CAACK,MAAN,CAAa,CACvBC,OAAO,CAAEL,IAAI,CAACM,OAAO,CAACC,GAAR,CAAYC,QAAb,CADU,CAAb,CAAZ,CAIA;AACAL,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,SAACC,MAAD,CAAY,CACvC;AACA,GAAMC,CAAAA,UAAU,CAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAnB,CAEA,GAAMC,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWL,UAAU,EAAI,IAAzB,CAArB,CAEA,GAAIG,YAAY,CAACG,KAAjB,CAAwB,CACtBP,MAAM,CAACQ,OAAP,CAAiB,CACfC,aAAa,kBAAYL,YAAY,CAACG,KAAzB,CADE,CAAjB,CAGD,CAED,MAAOP,CAAAA,MAAP,CACD,CAbD,EAeA,cAAeT,CAAAA,GAAf","sourcesContent":["import axios from \"axios\";\n\nconst apis = {\n  development: \"http://localhost:3000/api\",\n  production: \"https://ironbank-server.herokuapp.com/api\",\n};\n\n// Pré-configurando a URL padrão do nosso backend em uma instância do Axios\nconst api = axios.create({\n  baseURL: apis[process.env.NODE_ENV],\n});\n\n// Configura a instância do Axios para injetar o cabeçalho de autenticação antes de cada requisição\napi.interceptors.request.use((config) => {\n  // Verifica se já temos as informações do usuário logado no localStorage\n  const storedUser = localStorage.getItem(\"loggedInUser\");\n\n  const loggedInUser = JSON.parse(storedUser || '\"\"');\n\n  if (loggedInUser.token) {\n    config.headers = {\n      Authorization: `Bearer ${loggedInUser.token}`,\n    };\n  }\n\n  return config;\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}