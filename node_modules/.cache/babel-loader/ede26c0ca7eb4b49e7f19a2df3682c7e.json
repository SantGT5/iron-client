{"ast":null,"code":"var _jsxFileName = \"/Users/gianlucas/Documents/GitProjects/VSCodes/LabsIronHack/GianCloneClient/iron-client/src/contexts/authContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  token: \"\",\n  user: {}\n});\n\nfunction AuthContextComponent(props) {\n  _s();\n\n  const [loggedInUser, setLoggedInUser] = useState({\n    token: \"\",\n    user: {}\n  });\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"loggedInUser\");\n    const parsedStoredUser = JSON.parse(storedUser || '\"\"');\n\n    if (parsedStoredUser.user) {\n      setLoggedInUser({ ...parsedStoredUser\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedInUser,\n      setLoggedInUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthContextComponent, \"vBO5Qf1QNIZaYLuXrd3iLdvmXxg=\");\n\n_c = AuthContextComponent;\nexport { AuthContextComponent, AuthContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextComponent\");","map":{"version":3,"sources":["/Users/gianlucas/Documents/GitProjects/VSCodes/LabsIronHack/GianCloneClient/iron-client/src/contexts/authContext.js"],"names":["React","useState","createContext","useEffect","AuthContext","token","user","AuthContextComponent","props","loggedInUser","setLoggedInUser","storedUser","localStorage","getItem","parsedStoredUser","JSON","parse","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,CAAC;AAAEG,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,IAAI,EAAE;AAAnB,CAAD,CAAjC;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAAhD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAnB;AAEA,UAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAU,IAAI,IAAzB,CAAzB;;AAEA,QAAIG,gBAAgB,CAACR,IAArB,EAA2B;AACzBI,MAAAA,eAAe,CAAC,EAAE,GAAGI;AAAL,OAAD,CAAf;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEL,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAA7B;AAAA,cACGF,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlBQV,oB;;KAAAA,oB;AAoBT,SAASA,oBAAT,EAA+BH,WAA/B","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\n\nconst AuthContext = createContext({ token: \"\", user: {} });\n\nfunction AuthContextComponent(props) {\n  const [loggedInUser, setLoggedInUser] = useState({ token: \"\", user: {} });\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"loggedInUser\");\n\n    const parsedStoredUser = JSON.parse(storedUser || '\"\"');\n\n    if (parsedStoredUser.user) {\n      setLoggedInUser({ ...parsedStoredUser });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ loggedInUser, setLoggedInUser }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nexport { AuthContextComponent, AuthContext };"]},"metadata":{},"sourceType":"module"}